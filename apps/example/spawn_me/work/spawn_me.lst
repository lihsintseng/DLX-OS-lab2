 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 377
    4                      ; Text size: 4448
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  73706177	.ascii "spawn_me: The completed number is %d\n\000"
   88  00003050  6e5f6d65	
   88  00003054  3a205468	
   88  00003058  6520636f	
   88  0000305c  6d706c65	
   88  00003060  74656420	
   88  00003064  6e756d62	
   88  00003068  65722069	
   88  0000306c  73202564	
   88  00003070  0a00    	
   89  00003072          	.align 2
   90  00003074          	LC3_LF0:
   91  00003074  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  00003078  64206e6f	
   91  0000307c  74206d61	
   91  00003080  70207468	
   91  00003084  65207669	
   91  00003088  72747561	
   91  0000308c  6c206164	
   91  00003090  64726573	
   91  00003094  7320746f	
   91  00003098  20746865	
   91  0000309c  206d656d	
   91  000030a0  6f727920	
   91  000030a4  696e2000	
   92  000030a8          	.align 2
   93  000030a8          	LC4_LF0:
   94  000030a8  2c206578	.ascii ", exiting...\n\000"
   94  000030ac  6974696e	
   94  000030b0  672e2e2e	
   94  000030b4  0a00    	
   95  000030b6          	.align 2
   96  000030b8          	LC5_LF0:
   97  000030b8  73706177	.ascii "spawn_me: This is one of the %d instances you created.  \000"
   97  000030bc  6e5f6d65	
   97  000030c0  3a205468	
   97  000030c4  69732069	
   97  000030c8  73206f6e	
   97  000030cc  65206f66	
   97  000030d0  20746865	
   97  000030d4  20256420	
   97  000030d8  696e7374	
   97  000030dc  616e6365	
   97  000030e0  7320796f	
   97  000030e4  75206372	
   97  000030e8  65617465	
   97  000030ec  642e2020	
   97  000030f0  00      	
   98  000030f1          	.align 2
   99  000030f4          	LC6_LF0:
  100  000030f4  73706177	.ascii "spawn_me: Missile code is: %c\n\000"
  100  000030f8  6e5f6d65	
  100  000030fc  3a204d69	
  100  00003100  7373696c	
  100  00003104  6520636f	
  100  00003108  64652069	
  100  0000310c  733a2025	
  100  00003110  630a00  	
  101  00003113          	.align 2
  102  00003114          	LC7_LF0:
  103  00003114  73706177	.ascii "spawn_me: My PID is %d\n\000"
  103  00003118  6e5f6d65	
  103  0000311c  3a204d79	
  103  00003120  20504944	
  103  00003124  20697320	
  103  00003128  25640a00	
  104  0000312c          	.align 2
  105  0000312c          	LC8_LF0:
  106  0000312c  73706177	.ascii "spawn_me: PID %d is complete. %d\n\000"
  106  00003130  6e5f6d65	
  106  00003134  3a205049	
  106  00003138  44202564	
  106  0000313c  20697320	
  106  00003140  636f6d70	
  106  00003144  6c657465	
  106  00003148  2e202564	
  106  0000314c  0a00    	
  107  0000314e          	.align 2
  108  00003150          	LC9_LF0:
  109  00003150  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  109  00003154  73656d61	
  109  00003158  70686f72	
  109  0000315c  6520735f	
  109  00003160  70726f63	
  109  00003164  735f636f	
  109  00003168  6d706c65	
  109  0000316c  74656420	
  109  00003170  28256429	
  109  00003174  20696e20	
  109  00003178  00      	
  110  00003179          	.text
  111  000010d4          	.align 2
  112  000010d4          	.proc _main
  113  000010d4          	.global _main
  114  000010d4          	_main:
  115                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  116  000010d4  afbefffc	sw	-4(r29),r30; push fp
  117  000010d8  001df020	add	r30,r0,r29; fp = sp
  118  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  119  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  120  000010e4  8fc20000	lw	r2,(r30)
  121  000010e8  8fc40004	lw	r4,4(r30)
  122  000010ec  0c001068	jal	___main
  123  000010f0  54000000	nop; not filled.
  124  000010f4  64410003	snei	r1,r2,#3
  125  000010f8  1020004c	beqz	r1,L14_LF0
  126  000010fc  54000000	nop; not filled.
  127  00001100  23bdfff8	addi	r29,r29,#-8
  128  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  129  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  130  0000110c  afa50000	sw	(r29),r5
  131  00001110  0c00023c	jal	_Printf
  132  00001114  54000000	nop; not filled.
  133  00001118  8c850000	lw	r5,(r4)
  134  0000111c  afa50000	sw	(r29),r5
  135  00001120  0c00022c	jal	_Printf
  136  00001124  54000000	nop; not filled.
  137  00001128  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  138  0000112c  24a53008	addui	r5,r5,(LC1_LF0)&0xffff
  139  00001130  afa50000	sw	(r29),r5
  140  00001134  0c000218	jal	_Printf
  141  00001138  54000000	nop; not filled.
  142  0000113c  0c0002c4	jal	_Exit
  143  00001140  54000000	nop; not filled.
  144  00001144  23bd0008	addi	r29,r29,#8
  145  00001148          	L14_LF0:
  146  00001148  23bdfff0	addi	r29,r29,#-16
  147  0000114c  8c850004	lw	r5,4(r4)
  148  00001150  afa50000	sw	(r29),r5
  149  00001154  20050000	addi	r5,r0,#0
  150  00001158  afa50004	sw	4(r29),r5
  151  0000115c  2005000a	addi	r5,r0,#10
  152  00001160  afa50008	sw	8(r29),r5
  153  00001164  0c000b48	jal	_dstrtol
  154  00001168  54000000	nop; not filled.
  155  0000116c  00011020	add	r2,r0,r1
  156  00001170  8c850008	lw	r5,8(r4)
  157  00001174  afa50000	sw	(r29),r5
  158  00001178  20050000	addi	r5,r0,#0
  159  0000117c  afa50004	sw	4(r29),r5
  160  00001180  2005000a	addi	r5,r0,#10
  161  00001184  afa50008	sw	8(r29),r5
  162  00001188  0c000b24	jal	_dstrtol
  163  0000118c  54000000	nop; not filled.
  164  00001190  00011820	add	r3,r0,r1
  165  00001194  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  166  00001198  24a5304c	addui	r5,r5,(LC2_LF0)&0xffff
  167  0000119c  afa50000	sw	(r29),r5
  168  000011a0  afa30004	sw	4(r29),r3
  169  000011a4  0c0001a8	jal	_Printf
  170  000011a8  54000000	nop; not filled.
  171  000011ac  afa20000	sw	(r29),r2
  172  000011b0  0c0001cc	jal	_shmat
  173  000011b4  54000000	nop; not filled.
  174  000011b8  00011020	add	r2,r0,r1
  175  000011bc  23bd0010	addi	r29,r29,#16
  176  000011c0  64410000	snei	r1,r2,#0
  177  000011c4  1420004c	bnez	r1,L15_LF0
  178  000011c8  54000000	nop; not filled.
  179  000011cc  23bdfff8	addi	r29,r29,#-8
  180  000011d0  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  181  000011d4  24a53074	addui	r5,r5,(LC3_LF0)&0xffff
  182  000011d8  afa50000	sw	(r29),r5
  183  000011dc  0c000170	jal	_Printf
  184  000011e0  54000000	nop; not filled.
  185  000011e4  8c850000	lw	r5,(r4)
  186  000011e8  afa50000	sw	(r29),r5
  187  000011ec  0c000160	jal	_Printf
  188  000011f0  54000000	nop; not filled.
  189  000011f4  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  190  000011f8  24a530a8	addui	r5,r5,(LC4_LF0)&0xffff
  191  000011fc  afa50000	sw	(r29),r5
  192  00001200  0c00014c	jal	_Printf
  193  00001204  54000000	nop; not filled.
  194  00001208  0c0001f8	jal	_Exit
  195  0000120c  54000000	nop; not filled.
  196  00001210  23bd0008	addi	r29,r29,#8
  197  00001214          	L15_LF0:
  198  00001214  23bdfff8	addi	r29,r29,#-8
  199  00001218  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  200  0000121c  24a530b8	addui	r5,r5,(LC5_LF0)&0xffff
  201  00001220  afa50000	sw	(r29),r5
  202  00001224  8c410000	lw	r1,(r2)
  203  00001228  afa10004	sw	4(r29),r1
  204  0000122c  0c000120	jal	_Printf
  205  00001230  54000000	nop; not filled.
  206  00001234  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  207  00001238  24a530f4	addui	r5,r5,(LC6_LF0)&0xffff
  208  0000123c  afa50000	sw	(r29),r5
  209  00001240  90410004	lbu	r1,4(r2)
  210  00001244  afa10004	sw	4(r29),r1
  211  00001248  0c000104	jal	_Printf
  212  0000124c  54000000	nop; not filled.
  213  00001250  0c000108	jal	_Getpid
  214  00001254  54000000	nop; not filled.
  215  00001258  3c050000	lhi	r5,((LC7_LF0)>>16)&0xffff
  216  0000125c  24a53114	addui	r5,r5,(LC7_LF0)&0xffff
  217  00001260  afa50000	sw	(r29),r5
  218  00001264  afa10004	sw	4(r29),r1
  219  00001268  0c0000e4	jal	_Printf
  220  0000126c  54000000	nop; not filled.
  221  00001270  0c0000e8	jal	_Getpid
  222  00001274  54000000	nop; not filled.
  223  00001278  23bdfff8	addi	r29,r29,#-8
  224  0000127c  3c050000	lhi	r5,((LC8_LF0)>>16)&0xffff
  225  00001280  24a5312c	addui	r5,r5,(LC8_LF0)&0xffff
  226  00001284  afa50000	sw	(r29),r5
  227  00001288  afa10004	sw	4(r29),r1
  228  0000128c  afa30008	sw	8(r29),r3
  229  00001290  0c0000bc	jal	_Printf
  230  00001294  54000000	nop; not filled.
  231  00001298  afa30000	sw	(r29),r3
  232  0000129c  0c000104	jal	_sem_signal
  233  000012a0  54000000	nop; not filled.
  234  000012a4  23bd0010	addi	r29,r29,#16
  235  000012a8  64210001	snei	r1,r1,#1
  236  000012ac  10200050	beqz	r1,L16_LF0
  237  000012b0  54000000	nop; not filled.
  238  000012b4  23bdfff8	addi	r29,r29,#-8
  239  000012b8  3c050000	lhi	r5,((LC9_LF0)>>16)&0xffff
  240  000012bc  24a53150	addui	r5,r5,(LC9_LF0)&0xffff
  241  000012c0  afa50000	sw	(r29),r5
  242  000012c4  afa30004	sw	4(r29),r3
  243  000012c8  0c000084	jal	_Printf
  244  000012cc  54000000	nop; not filled.
  245  000012d0  8c840000	lw	r4,(r4)
  246  000012d4  afa40000	sw	(r29),r4
  247  000012d8  0c000074	jal	_Printf
  248  000012dc  54000000	nop; not filled.
  249  000012e0  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  250  000012e4  24a530a8	addui	r5,r5,(LC4_LF0)&0xffff
  251  000012e8  afa50000	sw	(r29),r5
  252  000012ec  0c000060	jal	_Printf
  253  000012f0  54000000	nop; not filled.
  254  000012f4  0c00010c	jal	_Exit
  255  000012f8  54000000	nop; not filled.
  256  000012fc  23bd0008	addi	r29,r29,#8
  257  00001300          	L16_LF0:
  258  00001300  0c000e48	jal	_exit
  259  00001304  54000000	nop
  260  00001308          	.endproc _main
  261                      ;;;
  262                      ;;; Stub functions for DLX traps.
  263                      ;;;
  264                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  265                      ;;;
  266                      ;;; The traps such as Open and Close
  267                      ;;; (note the capital letters) are for use by user programs.  The traps
  268                      ;;; with names such as open and close (lower case) are for use by the OS.
  269                      ;;;
  272  00001308          	.align 2
  274                      ;;; The following are the traps to be used by user-level programs
  275                      ;;;
  277  00001308          	.align 2
  278  00001308          	.proc _Open
  279  00001308          	.global _Open
  280  00001308          	_Open:
  281                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  282                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  283                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  284  00001308  44000213	trap	#0x213
  285  0000130c  4be00000	jr	r31
  286  00001310  54000000	nop
  287  00001314          	.endproc _Open
  289  00001314          	.proc _Close
  290  00001314          	.global _Close
  291  00001314          	_Close:
  292  00001314  44000214	trap	#0x214
  293  00001318  4be00000	jr	r31
  294  0000131c  54000000	nop
  295  00001320          	.endproc _Close
  297  00001320          	.proc _Read
  298  00001320          	.global _Read
  299  00001320          	_Read:
  300  00001320  44000210	trap	#0x210
  301  00001324  4be00000	jr	r31
  302  00001328  54000000	nop
  303  0000132c          	.endproc _Read
  305  0000132c          	.proc _Write
  306  0000132c          	.global _Write
  307  0000132c          	_Write:
  308  0000132c  44000211	trap	#0x211
  309  00001330  4be00000	jr	r31
  310  00001334  54000000	nop
  311  00001338          	.endproc _Write
  313  00001338          	.proc _Lseek
  314  00001338          	.global _Lseek
  315  00001338          	_Lseek:
  316  00001338  44000212	trap	#0x212
  317  0000133c  4be00000	jr	r31
  318  00001340  54000000	nop
  319  00001344          	.endproc _Lseek
  321  00001344          	.proc _Putchar
  322  00001344          	.global _Putchar
  323  00001344          	_Putchar:
  324  00001344  44000280	trap	#0x280
  325  00001348  4be00000	jr	r31
  326  0000134c  54000000	nop
  327  00001350          	.endproc _Putchar
  329  00001350          	.proc _Printf
  330  00001350          	.global _Printf
  331  00001350          	_Printf:
  332  00001350  44000201	trap	#0x201
  333  00001354  4be00000	jr	r31
  334  00001358  54000000	nop
  335  0000135c          	.endproc _Printf
  337  0000135c          	.proc _Getpid
  338  0000135c          	.global _Getpid
  339  0000135c          	_Getpid:
  340  0000135c  44000431	trap	#0x431
  341  00001360  4be00000	jr	r31
  342  00001364  54000000	nop
  343  00001368          	.endproc _Getpid
  345  00001368          	.proc _process_create
  346  00001368          	.global _process_create
  347  00001368          	_process_create:
  348  00001368  44000432	trap	#0x432
  349  0000136c  4be00000	jr	r31
  350  00001370  54000000	nop
  351  00001374          	.endproc _process_create
  353  00001374          	.proc _shmget
  354  00001374          	.global _shmget
  355  00001374          	_shmget:
  356  00001374  44000440	trap	#0x440
  357  00001378  4be00000	jr	r31
  358  0000137c  54000000	nop
  359  00001380          	.endproc _shmget
  361  00001380          	.proc _shmat
  362  00001380          	.global _shmat
  363  00001380          	_shmat:
  364  00001380  44000441	trap	#0x441
  365  00001384  4be00000	jr	r31
  366  00001388  54000000	nop
  367  0000138c          	.endproc _shmat
  369  0000138c          	.proc _sem_create
  370  0000138c          	.global _sem_create
  371  0000138c          	_sem_create:
  372  0000138c  44000450	trap	#0x450
  373  00001390  4be00000	jr	r31
  374  00001394  54000000	nop
  375  00001398          	.endproc _sem_create
  377  00001398          	.proc _sem_wait
  378  00001398          	.global _sem_wait
  379  00001398          	_sem_wait:
  380  00001398  44000451	trap	#0x451
  381  0000139c  4be00000	jr	r31
  382  000013a0  54000000	nop
  383  000013a4          	.endproc _sem_wait
  385  000013a4          	.proc _sem_signal
  386  000013a4          	.global _sem_signal
  387  000013a4          	_sem_signal:
  388  000013a4  44000452	trap	#0x452
  389  000013a8  4be00000	jr	r31
  390  000013ac  54000000	nop
  391  000013b0          	.endproc _sem_signal
  393  000013b0          	.proc _lock_create
  394  000013b0          	.global _lock_create
  395  000013b0          	_lock_create:
  396  000013b0  44000453	trap	#0x453
  397  000013b4  4be00000	jr	r31
  398  000013b8  54000000	nop
  399  000013bc          	.endproc _lock_create
  401  000013bc          	.proc _lock_acquire
  402  000013bc          	.global _lock_acquire
  403  000013bc          	_lock_acquire:
  404  000013bc  44000454	trap	#0x454
  405  000013c0  4be00000	jr	r31
  406  000013c4  54000000	nop
  407  000013c8          	.endproc _lock_acquire
  409  000013c8          	.proc _lock_release
  410  000013c8          	.global _lock_release
  411  000013c8          	_lock_release:
  412  000013c8  44000455	trap	#0x455
  413  000013cc  4be00000	jr	r31
  414  000013d0  54000000	nop
  415  000013d4          	.endproc _lock_release
  417  000013d4          	.proc _cond_create
  418  000013d4          	.global _cond_create
  419  000013d4          	_cond_create:
  420  000013d4  44000456	trap	#0x456
  421  000013d8  4be00000	jr	r31
  422  000013dc  54000000	nop
  423  000013e0          	.endproc _cond_create
  425  000013e0          	.proc _cond_wait
  426  000013e0          	.global _cond_wait
  427  000013e0          	_cond_wait:
  428  000013e0  44000457	trap	#0x457
  429  000013e4  4be00000	jr	r31
  430  000013e8  54000000	nop
  431  000013ec          	.endproc _cond_wait
  433  000013ec          	.proc _cond_signal
  434  000013ec          	.global _cond_signal
  435  000013ec          	_cond_signal:
  436  000013ec  44000458	trap	#0x458
  437  000013f0  4be00000	jr	r31
  438  000013f4  54000000	nop
  439  000013f8          	.endproc _cond_signal
  441  000013f8          	.proc _cond_broadcast
  442  000013f8          	.global _cond_broadcast
  443  000013f8          	_cond_broadcast:
  444  000013f8  44000455	trap	#0x455
  445  000013fc  4be00000	jr	r31
  446  00001400  54000000	nop
  447  00001404          	.endproc _cond_broadcast
  449  00001404          	.proc _Exit
  450  00001404          	.global _Exit
  451  00001404          	_Exit:
  452  00001404  44000500	trap	#0x500
  453  00001408  4be00000	jr	r31
  454  0000140c  54000000	nop
  455  00001410          	.endproc _Exit
  456                      ; Compiled by GCC
  458  00001410          	.align 2
  459  00001410          	.proc _isspace
  460  00001410          	.global _isspace
  461  00001410          	_isspace:
  462                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  463  00001410  afbefffc	sw	-4(r29),r30; push fp
  464  00001414  001df020	add	r30,r0,r29; fp = sp
  465  00001418  afbffff8	sw	-8(r29),r31; push ret addr
  466  0000141c  2fbd0018	subui	r29,r29,#24; alloc local storage
  467  00001420  afa20000	sw	0(r29),r2
  468  00001424  afa30004	sw	4(r29),r3
  469  00001428  afa40008	sw	8(r29),r4
  470  0000142c  83c20003	lb	r2,3(r30)
  471  00001430  20010000	addi	r1,r0,#0
  472  00001434  304300ff	andi	r3,r2,#0x00ff
  473  00001438  60640020	seqi	r4,r3,#32
  474  0000143c  1480002c	bnez	r4,L3_LF2
  475  00001440  54000000	nop; delay slot nop
  476  00001444  304300ff	andi	r3,r2,#0x00ff
  477  00001448  60640009	seqi	r4,r3,#9
  478  0000144c  1480001c	bnez	r4,L3_LF2
  479  00001450  54000000	nop; delay slot nop
  480  00001454  304300ff	andi	r3,r2,#0x00ff
  481  00001458  6064000a	seqi	r4,r3,#10
  482  0000145c  1480000c	bnez	r4,L3_LF2
  483  00001460  54000000	nop; delay slot nop
  484  00001464  08000008	j	L2_LF2
  485  00001468  54000000	nop; delay slot nop
  486  0000146c          	L3_LF2:
  487  0000146c  20010001	addi	r1,r0,#1
  488  00001470          	L2_LF2:
  489  00001470  08000004	j	L1_LF2
  490  00001474  54000000	nop; delay slot nop
  491  00001478          	L1_LF2:
  492  00001478  8fa20000	lw	r2,0(r29)
  493  0000147c  8fa30004	lw	r3,4(r29)
  494  00001480  8fa40008	lw	r4,8(r29)
  495  00001484  8fdffff8	lw	r31,-8(r30)
  496  00001488  001ee820	add	r29,r0,r30
  497  0000148c  8fdefffc	lw	r30,-4(r30)
  498  00001490  4be00000	jr	r31
  499  00001494  54000000	nop
  500  00001498          	.endproc _isspace
  501  00001498          	.align 2
  502  00001498          	.proc _isxdigit
  503  00001498          	.global _isxdigit
  504  00001498          	_isxdigit:
  505                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  506  00001498  afbefffc	sw	-4(r29),r30; push fp
  507  0000149c  001df020	add	r30,r0,r29; fp = sp
  508  000014a0  afbffff8	sw	-8(r29),r31; push ret addr
  509  000014a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  510  000014a8  afa20000	sw	0(r29),r2
  511  000014ac  afa30004	sw	4(r29),r3
  512  000014b0  afa40008	sw	8(r29),r4
  513  000014b4  83c20003	lb	r2,3(r30)
  514  000014b8  20010000	addi	r1,r0,#0
  515  000014bc  304300ff	andi	r3,r2,#0x00ff
  516  000014c0  6c64002f	sgtui	r4,r3,#47
  517  000014c4  1080001c	beqz	r4,L7_LF2
  518  000014c8  54000000	nop; delay slot nop
  519  000014cc  304300ff	andi	r3,r2,#0x00ff
  520  000014d0  70640039	sleui	r4,r3,#57
  521  000014d4  1480005c	bnez	r4,L6_LF2
  522  000014d8  54000000	nop; delay slot nop
  523  000014dc  08000004	j	L7_LF2
  524  000014e0  54000000	nop; delay slot nop
  525  000014e4          	L7_LF2:
  526  000014e4  304300ff	andi	r3,r2,#0x00ff
  527  000014e8  6c640060	sgtui	r4,r3,#96
  528  000014ec  1080001c	beqz	r4,L8_LF2
  529  000014f0  54000000	nop; delay slot nop
  530  000014f4  304300ff	andi	r3,r2,#0x00ff
  531  000014f8  70640066	sleui	r4,r3,#102
  532  000014fc  14800034	bnez	r4,L6_LF2
  533  00001500  54000000	nop; delay slot nop
  534  00001504  08000004	j	L8_LF2
  535  00001508  54000000	nop; delay slot nop
  536  0000150c          	L8_LF2:
  537  0000150c  304300ff	andi	r3,r2,#0x00ff
  538  00001510  6c640040	sgtui	r4,r3,#64
  539  00001514  10800020	beqz	r4,L5_LF2
  540  00001518  54000000	nop; delay slot nop
  541  0000151c  304300ff	andi	r3,r2,#0x00ff
  542  00001520  70640041	sleui	r4,r3,#65
  543  00001524  1480000c	bnez	r4,L6_LF2
  544  00001528  54000000	nop; delay slot nop
  545  0000152c  08000008	j	L5_LF2
  546  00001530  54000000	nop; delay slot nop
  547  00001534          	L6_LF2:
  548  00001534  20010001	addi	r1,r0,#1
  549  00001538          	L5_LF2:
  550  00001538  08000004	j	L4_LF2
  551  0000153c  54000000	nop; delay slot nop
  552  00001540          	L4_LF2:
  553  00001540  8fa20000	lw	r2,0(r29)
  554  00001544  8fa30004	lw	r3,4(r29)
  555  00001548  8fa40008	lw	r4,8(r29)
  556  0000154c  8fdffff8	lw	r31,-8(r30)
  557  00001550  001ee820	add	r29,r0,r30
  558  00001554  8fdefffc	lw	r30,-4(r30)
  559  00001558  4be00000	jr	r31
  560  0000155c  54000000	nop
  561  00001560          	.endproc _isxdigit
  562  00001560          	.align 2
  563  00001560          	.proc _dstrcpy
  564  00001560          	.global _dstrcpy
  565  00001560          	_dstrcpy:
  566                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  567  00001560  afbefffc	sw	-4(r29),r30; push fp
  568  00001564  001df020	add	r30,r0,r29; fp = sp
  569  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  570  0000156c  2fbd0018	subui	r29,r29,#24; alloc local storage
  571  00001570  afa20000	sw	0(r29),r2
  572  00001574  afa30004	sw	4(r29),r3
  573  00001578  8fc10000	lw	r1,(r30)
  574  0000157c  afc1fff4	sw	-12(r30),r1
  575  00001580          	L10_LF2:
  576  00001580  8fc10000	lw	r1,(r30)
  577  00001584  20220001	addi	r2,r1,#1
  578  00001588  afc20000	sw	(r30),r2
  579  0000158c  8fc20004	lw	r2,4(r30)
  580  00001590  20430001	addi	r3,r2,#1
  581  00001594  afc30004	sw	4(r30),r3
  582  00001598  80420000	lb	r2,(r2)
  583  0000159c  a0220000	sb	(r1),r2
  584  000015a0  a3c2fff3	sb	-13(r30),r2
  585  000015a4          	L12_LF2:
  586  000015a4  93c1fff3	lbu	r1,-13(r30)
  587  000015a8  64220000	snei	r2,r1,#0
  588  000015ac  1440000c	bnez	r2,L13_LF2
  589  000015b0  54000000	nop; delay slot nop
  590  000015b4  0800000c	j	L11_LF2
  591  000015b8  54000000	nop; delay slot nop
  592  000015bc          	L13_LF2:
  593  000015bc  0bffffc0	j	L10_LF2
  594  000015c0  54000000	nop; delay slot nop
  595  000015c4          	L11_LF2:
  596  000015c4  8fc1fff4	lw	r1,-12(r30)
  597  000015c8  08000004	j	L9_LF2
  598  000015cc  54000000	nop; delay slot nop
  599  000015d0          	L9_LF2:
  600  000015d0  8fa20000	lw	r2,0(r29)
  601  000015d4  8fa30004	lw	r3,4(r29)
  602  000015d8  8fdffff8	lw	r31,-8(r30)
  603  000015dc  001ee820	add	r29,r0,r30
  604  000015e0  8fdefffc	lw	r30,-4(r30)
  605  000015e4  4be00000	jr	r31
  606  000015e8  54000000	nop
  607  000015ec          	.endproc _dstrcpy
  608  000015ec          	.align 2
  609  000015ec          	.proc _dstrncpy
  610  000015ec          	.global _dstrncpy
  611  000015ec          	_dstrncpy:
  612                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  613  000015ec  afbefffc	sw	-4(r29),r30; push fp
  614  000015f0  001df020	add	r30,r0,r29; fp = sp
  615  000015f4  afbffff8	sw	-8(r29),r31; push ret addr
  616  000015f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  617  000015fc  afa20000	sw	0(r29),r2
  618  00001600  afa30004	sw	4(r29),r3
  619  00001604  8fc10000	lw	r1,(r30)
  620  00001608  afc1fff4	sw	-12(r30),r1
  621  0000160c          	L15_LF2:
  622  0000160c  8fc10008	lw	r1,8(r30)
  623  00001610  2022ffff	addi	r2,r1,#-1
  624  00001614  afc20008	sw	8(r30),r2
  625  00001618  70210000	slei	r1,r1,#0
  626  0000161c  1020000c	beqz	r1,L18_LF2
  627  00001620  54000000	nop; delay slot nop
  628  00001624  08000048	j	L16_LF2
  629  00001628  54000000	nop; delay slot nop
  630  0000162c          	L18_LF2:
  631  0000162c  8fc10000	lw	r1,(r30)
  632  00001630  20220001	addi	r2,r1,#1
  633  00001634  afc20000	sw	(r30),r2
  634  00001638  8fc20004	lw	r2,4(r30)
  635  0000163c  20430001	addi	r3,r2,#1
  636  00001640  afc30004	sw	4(r30),r3
  637  00001644  80420000	lb	r2,(r2)
  638  00001648  a0220000	sb	(r1),r2
  639  0000164c  a3c2fff3	sb	-13(r30),r2
  640  00001650          	L17_LF2:
  641  00001650  93c1fff3	lbu	r1,-13(r30)
  642  00001654  64220000	snei	r2,r1,#0
  643  00001658  1440000c	bnez	r2,L19_LF2
  644  0000165c  54000000	nop; delay slot nop
  645  00001660  0800000c	j	L16_LF2
  646  00001664  54000000	nop; delay slot nop
  647  00001668          	L19_LF2:
  648  00001668  0bffffa0	j	L15_LF2
  649  0000166c  54000000	nop; delay slot nop
  650  00001670          	L16_LF2:
  651  00001670  8fc1fff4	lw	r1,-12(r30)
  652  00001674  08000004	j	L14_LF2
  653  00001678  54000000	nop; delay slot nop
  654  0000167c          	L14_LF2:
  655  0000167c  8fa20000	lw	r2,0(r29)
  656  00001680  8fa30004	lw	r3,4(r29)
  657  00001684  8fdffff8	lw	r31,-8(r30)
  658  00001688  001ee820	add	r29,r0,r30
  659  0000168c  8fdefffc	lw	r30,-4(r30)
  660  00001690  4be00000	jr	r31
  661  00001694  54000000	nop
  662  00001698          	.endproc _dstrncpy
  663  00001698          	.align 2
  664  00001698          	.proc _dstrcat
  665  00001698          	.global _dstrcat
  666  00001698          	_dstrcat:
  667                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  668  00001698  afbefffc	sw	-4(r29),r30; push fp
  669  0000169c  001df020	add	r30,r0,r29; fp = sp
  670  000016a0  afbffff8	sw	-8(r29),r31; push ret addr
  671  000016a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  672  000016a8  afa20000	sw	0(r29),r2
  673  000016ac  8fc10000	lw	r1,(r30)
  674  000016b0  afc1fff4	sw	-12(r30),r1
  675  000016b4          	L21_LF2:
  676  000016b4  8fc10000	lw	r1,(r30)
  677  000016b8  90220000	lbu	r2,(r1)
  678  000016bc  64410000	snei	r1,r2,#0
  679  000016c0  1420000c	bnez	r1,L23_LF2
  680  000016c4  54000000	nop; delay slot nop
  681  000016c8  0800001c	j	L22_LF2
  682  000016cc  54000000	nop; delay slot nop
  683  000016d0          	L23_LF2:
  684  000016d0  8fc20000	lw	r2,(r30)
  685  000016d4  20410001	addi	r1,r2,#1
  686  000016d8  00011020	add	r2,r0,r1
  687  000016dc  afc20000	sw	(r30),r2
  688  000016e0  0bffffd0	j	L21_LF2
  689  000016e4  54000000	nop; delay slot nop
  690  000016e8          	L22_LF2:
  691  000016e8  23bdfff8	addi	r29,r29,#-8
  692  000016ec  001d0820	add	r1,r0,r29
  693  000016f0  8fc20000	lw	r2,(r30)
  694  000016f4  ac220000	sw	(r1),r2
  695  000016f8  8fc20004	lw	r2,4(r30)
  696  000016fc  ac220004	sw	4(r1),r2
  697  00001700  0ffffe5c	jal	_dstrcpy
  698  00001704  54000000	nop; delay slot nop
  699  00001708  23bd0008	addi	r29,r29,#8
  700  0000170c  8fc1fff4	lw	r1,-12(r30)
  701  00001710  08000004	j	L20_LF2
  702  00001714  54000000	nop; delay slot nop
  703  00001718          	L20_LF2:
  704  00001718  8fa20000	lw	r2,0(r29)
  705  0000171c  8fdffff8	lw	r31,-8(r30)
  706  00001720  001ee820	add	r29,r0,r30
  707  00001724  8fdefffc	lw	r30,-4(r30)
  708  00001728  4be00000	jr	r31
  709  0000172c  54000000	nop
  710  00001730          	.endproc _dstrcat
  711  00001730          	.align 2
  712  00001730          	.proc _dstrncmp
  713  00001730          	.global _dstrncmp
  714  00001730          	_dstrncmp:
  715                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  716  00001730  afbefffc	sw	-4(r29),r30; push fp
  717  00001734  001df020	add	r30,r0,r29; fp = sp
  718  00001738  afbffff8	sw	-8(r29),r31; push ret addr
  719  0000173c  2fbd0018	subui	r29,r29,#24; alloc local storage
  720  00001740  afa20000	sw	0(r29),r2
  721  00001744  afa30004	sw	4(r29),r3
  722  00001748  54000000	nop
  723  0000174c  20010000	addi	r1,r0,#0
  724  00001750  afc1fff4	sw	-12(r30),r1
  725  00001754          	L25_LF2:
  726  00001754  8fc1fff4	lw	r1,-12(r30)
  727  00001758  8fc20008	lw	r2,8(r30)
  728  0000175c  0022082a	slt	r1,r1,r2
  729  00001760  1420000c	bnez	r1,L28_LF2
  730  00001764  54000000	nop; delay slot nop
  731  00001768  08000088	j	L26_LF2
  732  0000176c  54000000	nop; delay slot nop
  733  00001770          	L28_LF2:
  734  00001770  8fc10004	lw	r1,4(r30)
  735  00001774  90220000	lbu	r2,(r1)
  736  00001778  64410000	snei	r1,r2,#0
  737  0000177c  14200018	bnez	r1,L29_LF2
  738  00001780  54000000	nop; delay slot nop
  739  00001784  20010000	addi	r1,r0,#0
  740  00001788  080000d8	j	L24_LF2
  741  0000178c  54000000	nop; delay slot nop
  742  00001790  08000028	j	L30_LF2
  743  00001794  54000000	nop; delay slot nop
  744  00001798          	L29_LF2:
  745  00001798  8fc10000	lw	r1,(r30)
  746  0000179c  8fc20004	lw	r2,4(r30)
  747  000017a0  90210000	lbu	r1,(r1)
  748  000017a4  90420000	lbu	r2,(r2)
  749  000017a8  00220829	sne	r1,r1,r2
  750  000017ac  1020000c	beqz	r1,L30_LF2
  751  000017b0  54000000	nop; delay slot nop
  752  000017b4  0800003c	j	L26_LF2
  753  000017b8  54000000	nop; delay slot nop
  754  000017bc          	L31_LF2:
  755  000017bc          	L30_LF2:
  756  000017bc  8fc20000	lw	r2,(r30)
  757  000017c0  20410001	addi	r1,r2,#1
  758  000017c4  00011020	add	r2,r0,r1
  759  000017c8  afc20000	sw	(r30),r2
  760  000017cc  8fc20004	lw	r2,4(r30)
  761  000017d0  20410001	addi	r1,r2,#1
  762  000017d4  00011020	add	r2,r0,r1
  763  000017d8  afc20004	sw	4(r30),r2
  764  000017dc          	L27_LF2:
  765  000017dc  8fc2fff4	lw	r2,-12(r30)
  766  000017e0  20410001	addi	r1,r2,#1
  767  000017e4  00011020	add	r2,r0,r1
  768  000017e8  afc2fff4	sw	-12(r30),r2
  769  000017ec  0bffff64	j	L25_LF2
  770  000017f0  54000000	nop; delay slot nop
  771  000017f4          	L26_LF2:
  772  000017f4  8fc1fff4	lw	r1,-12(r30)
  773  000017f8  8fc20008	lw	r2,8(r30)
  774  000017fc  00220828	seq	r1,r1,r2
  775  00001800  10200018	beqz	r1,L32_LF2
  776  00001804  54000000	nop; delay slot nop
  777  00001808  20010000	addi	r1,r0,#0
  778  0000180c  08000054	j	L24_LF2
  779  00001810  54000000	nop; delay slot nop
  780  00001814  0800004c	j	L33_LF2
  781  00001818  54000000	nop; delay slot nop
  782  0000181c          	L32_LF2:
  783  0000181c  8fc20000	lw	r2,(r30)
  784  00001820  90410000	lbu	r1,(r2)
  785  00001824  8fc20004	lw	r2,4(r30)
  786  00001828  90430000	lbu	r3,(r2)
  787  0000182c  00230822	sub	r1,r1,r3
  788  00001830  74220000	sgei	r2,r1,#0
  789  00001834  10400020	beqz	r2,L34_LF2
  790  00001838  54000000	nop; delay slot nop
  791  0000183c  8fc10000	lw	r1,(r30)
  792  00001840  8fc20004	lw	r2,4(r30)
  793  00001844  90210000	lbu	r1,(r1)
  794  00001848  90420000	lbu	r2,(r2)
  795  0000184c  00220829	sne	r1,r1,r2
  796  00001850  08000008	j	L35_LF2
  797  00001854  54000000	nop; delay slot nop
  798  00001858          	L34_LF2:
  799  00001858  2001ffff	addi	r1,r0,#-1
  800  0000185c          	L35_LF2:
  801  0000185c  08000004	j	L24_LF2
  802  00001860  54000000	nop; delay slot nop
  803  00001864          	L33_LF2:
  804  00001864          	L24_LF2:
  805  00001864  8fa20000	lw	r2,0(r29)
  806  00001868  8fa30004	lw	r3,4(r29)
  807  0000186c  8fdffff8	lw	r31,-8(r30)
  808  00001870  001ee820	add	r29,r0,r30
  809  00001874  8fdefffc	lw	r30,-4(r30)
  810  00001878  4be00000	jr	r31
  811  0000187c  54000000	nop
  812  00001880          	.endproc _dstrncmp
  813  00001880          	.align 2
  814  00001880          	.proc _dstrlen
  815  00001880          	.global _dstrlen
  816  00001880          	_dstrlen:
  817                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  818  00001880  afbefffc	sw	-4(r29),r30; push fp
  819  00001884  001df020	add	r30,r0,r29; fp = sp
  820  00001888  afbffff8	sw	-8(r29),r31; push ret addr
  821  0000188c  2fbd0018	subui	r29,r29,#24; alloc local storage
  822  00001890  afa20000	sw	0(r29),r2
  823  00001894  20010000	addi	r1,r0,#0
  824  00001898  afc1fff4	sw	-12(r30),r1
  825  0000189c          	L37_LF2:
  826  0000189c  8fc10000	lw	r1,(r30)
  827  000018a0  20220001	addi	r2,r1,#1
  828  000018a4  afc20000	sw	(r30),r2
  829  000018a8  90210000	lbu	r1,(r1)
  830  000018ac  64220000	snei	r2,r1,#0
  831  000018b0  1440000c	bnez	r2,L39_LF2
  832  000018b4  54000000	nop; delay slot nop
  833  000018b8  0800001c	j	L38_LF2
  834  000018bc  54000000	nop; delay slot nop
  835  000018c0          	L39_LF2:
  836  000018c0  8fc2fff4	lw	r2,-12(r30)
  837  000018c4  20410001	addi	r1,r2,#1
  838  000018c8  00011020	add	r2,r0,r1
  839  000018cc  afc2fff4	sw	-12(r30),r2
  840  000018d0  0bffffc8	j	L37_LF2
  841  000018d4  54000000	nop; delay slot nop
  842  000018d8          	L38_LF2:
  843  000018d8  8fc1fff4	lw	r1,-12(r30)
  844  000018dc  08000004	j	L36_LF2
  845  000018e0  54000000	nop; delay slot nop
  846  000018e4          	L36_LF2:
  847  000018e4  8fa20000	lw	r2,0(r29)
  848  000018e8  8fdffff8	lw	r31,-8(r30)
  849  000018ec  001ee820	add	r29,r0,r30
  850  000018f0  8fdefffc	lw	r30,-4(r30)
  851  000018f4  4be00000	jr	r31
  852  000018f8  54000000	nop
  853  000018fc          	.endproc _dstrlen
  854  000018fc          	.align 2
  855  000018fc          	.proc _dstrstr
  856  000018fc          	.global _dstrstr
  857  000018fc          	_dstrstr:
  858                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  859  000018fc  afbefffc	sw	-4(r29),r30; push fp
  860  00001900  001df020	add	r30,r0,r29; fp = sp
  861  00001904  afbffff8	sw	-8(r29),r31; push ret addr
  862  00001908  2fbd0018	subui	r29,r29,#24; alloc local storage
  863  0000190c  afa20000	sw	0(r29),r2
  864  00001910  23bdfff8	addi	r29,r29,#-8
  865  00001914  001d0820	add	r1,r0,r29
  866  00001918  8fc20004	lw	r2,4(r30)
  867  0000191c  ac220000	sw	(r1),r2
  868  00001920  0fffff5c	jal	_dstrlen
  869  00001924  54000000	nop; delay slot nop
  870  00001928  23bd0008	addi	r29,r29,#8
  871  0000192c  afc1fff4	sw	-12(r30),r1
  872  00001930          	L41_LF2:
  873  00001930  8fc10000	lw	r1,(r30)
  874  00001934  90220000	lbu	r2,(r1)
  875  00001938  64410000	snei	r1,r2,#0
  876  0000193c  1420000c	bnez	r1,L43_LF2
  877  00001940  54000000	nop; delay slot nop
  878  00001944  08000060	j	L42_LF2
  879  00001948  54000000	nop; delay slot nop
  880  0000194c          	L43_LF2:
  881  0000194c  23bdfff0	addi	r29,r29,#-16
  882  00001950  001d0820	add	r1,r0,r29
  883  00001954  8fc20000	lw	r2,(r30)
  884  00001958  ac220000	sw	(r1),r2
  885  0000195c  8fc20004	lw	r2,4(r30)
  886  00001960  ac220004	sw	4(r1),r2
  887  00001964  8fc2fff4	lw	r2,-12(r30)
  888  00001968  ac220008	sw	8(r1),r2
  889  0000196c  0ffffdc0	jal	_dstrncmp
  890  00001970  54000000	nop; delay slot nop
  891  00001974  23bd0010	addi	r29,r29,#16
  892  00001978  64220000	snei	r2,r1,#0
  893  0000197c  14400010	bnez	r2,L44_LF2
  894  00001980  54000000	nop; delay slot nop
  895  00001984  8fc10000	lw	r1,(r30)
  896  00001988  08000028	j	L40_LF2
  897  0000198c  54000000	nop; delay slot nop
  898  00001990          	L44_LF2:
  899  00001990  8fc20000	lw	r2,(r30)
  900  00001994  20410001	addi	r1,r2,#1
  901  00001998  00011020	add	r2,r0,r1
  902  0000199c  afc20000	sw	(r30),r2
  903  000019a0  0bffff8c	j	L41_LF2
  904  000019a4  54000000	nop; delay slot nop
  905  000019a8          	L42_LF2:
  906  000019a8  20010000	addi	r1,r0,#0
  907  000019ac  08000004	j	L40_LF2
  908  000019b0  54000000	nop; delay slot nop
  909  000019b4          	L40_LF2:
  910  000019b4  8fa20000	lw	r2,0(r29)
  911  000019b8  8fdffff8	lw	r31,-8(r30)
  912  000019bc  001ee820	add	r29,r0,r30
  913  000019c0  8fdefffc	lw	r30,-4(r30)
  914  000019c4  4be00000	jr	r31
  915  000019c8  54000000	nop
  916  000019cc          	.endproc _dstrstr
  917  000019cc          	.align 2
  918  000019cc          	.proc _dmindex
  919  000019cc          	.global _dmindex
  920  000019cc          	_dmindex:
  921                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  922  000019cc  afbefffc	sw	-4(r29),r30; push fp
  923  000019d0  001df020	add	r30,r0,r29; fp = sp
  924  000019d4  afbffff8	sw	-8(r29),r31; push ret addr
  925  000019d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  926  000019dc  afa20000	sw	0(r29),r2
  927  000019e0  54000000	nop
  928  000019e4          	L46_LF2:
  929  000019e4  8fc10000	lw	r1,(r30)
  930  000019e8  90220000	lbu	r2,(r1)
  931  000019ec  64410000	snei	r1,r2,#0
  932  000019f0  1420000c	bnez	r1,L48_LF2
  933  000019f4  54000000	nop; delay slot nop
  934  000019f8  08000070	j	L47_LF2
  935  000019fc  54000000	nop; delay slot nop
  936  00001a00          	L48_LF2:
  937  00001a00  8fc10004	lw	r1,4(r30)
  938  00001a04  afc1fff4	sw	-12(r30),r1
  939  00001a08          	L49_LF2:
  940  00001a08  8fc1fff4	lw	r1,-12(r30)
  941  00001a0c  90220000	lbu	r2,(r1)
  942  00001a10  64410000	snei	r1,r2,#0
  943  00001a14  1420000c	bnez	r1,L52_LF2
  944  00001a18  54000000	nop; delay slot nop
  945  00001a1c  08000044	j	L50_LF2
  946  00001a20  54000000	nop; delay slot nop
  947  00001a24          	L52_LF2:
  948  00001a24  8fc10000	lw	r1,(r30)
  949  00001a28  8fc2fff4	lw	r2,-12(r30)
  950  00001a2c  90210000	lbu	r1,(r1)
  951  00001a30  90420000	lbu	r2,(r2)
  952  00001a34  00220828	seq	r1,r1,r2
  953  00001a38  10200010	beqz	r1,L51_LF2
  954  00001a3c  54000000	nop; delay slot nop
  955  00001a40  8fc10000	lw	r1,(r30)
  956  00001a44  08000030	j	L45_LF2
  957  00001a48  54000000	nop; delay slot nop
  958  00001a4c          	L53_LF2:
  959  00001a4c          	L51_LF2:
  960  00001a4c  8fc2fff4	lw	r2,-12(r30)
  961  00001a50  20410001	addi	r1,r2,#1
  962  00001a54  00011020	add	r2,r0,r1
  963  00001a58  afc2fff4	sw	-12(r30),r2
  964  00001a5c  0bffffa8	j	L49_LF2
  965  00001a60  54000000	nop; delay slot nop
  966  00001a64          	L50_LF2:
  967  00001a64  0bffff7c	j	L46_LF2
  968  00001a68  54000000	nop; delay slot nop
  969  00001a6c          	L47_LF2:
  970  00001a6c  20010000	addi	r1,r0,#0
  971  00001a70  08000004	j	L45_LF2
  972  00001a74  54000000	nop; delay slot nop
  973  00001a78          	L45_LF2:
  974  00001a78  8fa20000	lw	r2,0(r29)
  975  00001a7c  8fdffff8	lw	r31,-8(r30)
  976  00001a80  001ee820	add	r29,r0,r30
  977  00001a84  8fdefffc	lw	r30,-4(r30)
  978  00001a88  4be00000	jr	r31
  979  00001a8c  54000000	nop
  980  00001a90          	.endproc _dmindex
  981  00001a90          	.align 2
  982  00001a90          	.proc _dindex
  983  00001a90          	.global _dindex
  984  00001a90          	_dindex:
  985                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  986  00001a90  afbefffc	sw	-4(r29),r30; push fp
  987  00001a94  001df020	add	r30,r0,r29; fp = sp
  988  00001a98  afbffff8	sw	-8(r29),r31; push ret addr
  989  00001a9c  2fbd0010	subui	r29,r29,#16; alloc local storage
  990  00001aa0  afa20000	sw	0(r29),r2
  991  00001aa4  54000000	nop
  992  00001aa8          	L55_LF2:
  993  00001aa8  8fc10000	lw	r1,(r30)
  994  00001aac  90220000	lbu	r2,(r1)
  995  00001ab0  64410000	snei	r1,r2,#0
  996  00001ab4  1420000c	bnez	r1,L57_LF2
  997  00001ab8  54000000	nop; delay slot nop
  998  00001abc  08000040	j	L56_LF2
  999  00001ac0  54000000	nop; delay slot nop
 1000  00001ac4          	L57_LF2:
 1001  00001ac4  8fc10000	lw	r1,(r30)
 1002  00001ac8  90220000	lbu	r2,(r1)
 1003  00001acc  8fc10004	lw	r1,4(r30)
 1004  00001ad0  00411028	seq	r2,r2,r1
 1005  00001ad4  10400010	beqz	r2,L58_LF2
 1006  00001ad8  54000000	nop; delay slot nop
 1007  00001adc  8fc10000	lw	r1,(r30)
 1008  00001ae0  08000028	j	L54_LF2
 1009  00001ae4  54000000	nop; delay slot nop
 1010  00001ae8          	L58_LF2:
 1011  00001ae8  8fc20000	lw	r2,(r30)
 1012  00001aec  20410001	addi	r1,r2,#1
 1013  00001af0  00011020	add	r2,r0,r1
 1014  00001af4  afc20000	sw	(r30),r2
 1015  00001af8  0bffffac	j	L55_LF2
 1016  00001afc  54000000	nop; delay slot nop
 1017  00001b00          	L56_LF2:
 1018  00001b00  20010000	addi	r1,r0,#0
 1019  00001b04  08000004	j	L54_LF2
 1020  00001b08  54000000	nop; delay slot nop
 1021  00001b0c          	L54_LF2:
 1022  00001b0c  8fa20000	lw	r2,0(r29)
 1023  00001b10  8fdffff8	lw	r31,-8(r30)
 1024  00001b14  001ee820	add	r29,r0,r30
 1025  00001b18  8fdefffc	lw	r30,-4(r30)
 1026  00001b1c  4be00000	jr	r31
 1027  00001b20  54000000	nop
 1028  00001b24          	.endproc _dindex
 1029  00001b24          	.align 2
 1030  00001b24          	.proc _ditoa
 1031  00001b24          	.global _ditoa
 1032  00001b24          	_ditoa:
 1033                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1034  00001b24  afbefffc	sw	-4(r29),r30; push fp
 1035  00001b28  001df020	add	r30,r0,r29; fp = sp
 1036  00001b2c  afbffff8	sw	-8(r29),r31; push ret addr
 1037  00001b30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1038  00001b34  afa20000	sw	0(r29),r2
 1039  00001b38  afa30004	sw	4(r29),r3
 1040  00001b3c  8fc10000	lw	r1,(r30)
 1041  00001b40  68220000	slti	r2,r1,#0
 1042  00001b44  1040002c	beqz	r2,L60_LF2
 1043  00001b48  54000000	nop; delay slot nop
 1044  00001b4c  8fc10004	lw	r1,4(r30)
 1045  00001b50  20220001	addi	r2,r1,#1
 1046  00001b54  afc20004	sw	4(r30),r2
 1047  00001b58  2002002d	addi	r2,r0,(#0x2d)&0xff
 1048  00001b5c  a0220000	sb	(r1),r2
 1049  00001b60  8fc10000	lw	r1,(r30)
 1050  00001b64  00011022	sub	r2,r0,r1
 1051  00001b68  afc20000	sw	(r30),r2
 1052  00001b6c  08000118	j	L61_LF2
 1053  00001b70  54000000	nop; delay slot nop
 1054  00001b74          	L60_LF2:
 1055  00001b74  8fc10000	lw	r1,(r30)
 1056  00001b78  64220000	snei	r2,r1,#0
 1057  00001b7c  14400020	bnez	r2,L62_LF2
 1058  00001b80  54000000	nop; delay slot nop
 1059  00001b84  8fc10004	lw	r1,4(r30)
 1060  00001b88  20220001	addi	r2,r1,#1
 1061  00001b8c  afc20004	sw	4(r30),r2
 1062  00001b90  20020030	addi	r2,r0,(#0x30)&0xff
 1063  00001b94  a0220000	sb	(r1),r2
 1064  00001b98  080000ec	j	L61_LF2
 1065  00001b9c  54000000	nop; delay slot nop
 1066  00001ba0          	L62_LF2:
 1067  00001ba0  20010001	addi	r1,r0,#1
 1068  00001ba4  afc1fff4	sw	-12(r30),r1
 1069  00001ba8          	L64_LF2:
 1070  00001ba8  8fc1fff4	lw	r1,-12(r30)
 1071  00001bac  8fc20000	lw	r2,(r30)
 1072  00001bb0  0022082c	sle	r1,r1,r2
 1073  00001bb4  1420000c	bnez	r1,L66_LF2
 1074  00001bb8  54000000	nop; delay slot nop
 1075  00001bbc  08000024	j	L65_LF2
 1076  00001bc0  54000000	nop; delay slot nop
 1077  00001bc4          	L67_LF2:
 1078  00001bc4          	L66_LF2:
 1079  00001bc4  8fc1fff4	lw	r1,-12(r30)
 1080  00001bc8  00011820	add	r3,r0,r1
 1081  00001bcc  50620002	slli	r2,r3,#0x2
 1082  00001bd0  00411020	add	r2,r2,r1
 1083  00001bd4  50410001	slli	r1,r2,#0x1
 1084  00001bd8  afc1fff4	sw	-12(r30),r1
 1085  00001bdc  0bffffc8	j	L64_LF2
 1086  00001be0  54000000	nop; delay slot nop
 1087  00001be4          	L65_LF2:
 1088  00001be4  54000000	nop
 1089  00001be8          	L68_LF2:
 1090  00001be8  8fc1fff4	lw	r1,-12(r30)
 1091  00001bec  2002000a	addi	r2,r0,#10
 1092  00001bf0  00200035	movi2fp	f0,r1
 1093  00001bf4  00400835	movi2fp	f1,r2
 1094  00001bf8  0401000f	div	f0,f0,f1
 1095  00001bfc  00000834	movfp2i	r1,f0
 1096  00001c00  afc1fff4	sw	-12(r30),r1
 1097  00001c04  8fc10004	lw	r1,4(r30)
 1098  00001c08  20220001	addi	r2,r1,#1
 1099  00001c0c  afc20004	sw	4(r30),r2
 1100  00001c10  8fc20000	lw	r2,(r30)
 1101  00001c14  8fc3fff4	lw	r3,-12(r30)
 1102  00001c18  00400035	movi2fp	f0,r2
 1103  00001c1c  00600835	movi2fp	f1,r3
 1104  00001c20  0401000f	div	f0,f0,f1
 1105  00001c24  00001034	movfp2i	r2,f0
 1106  00001c28  00021820	add	r3,r0,r2
 1107  00001c2c  20620030	addi	r2,r3,#48
 1108  00001c30  a0220000	sb	(r1),r2
 1109  00001c34  8fc10000	lw	r1,(r30)
 1110  00001c38  8fc3fff4	lw	r3,-12(r30)
 1111  00001c3c  00200035	movi2fp	f0,r1
 1112  00001c40  00600835	movi2fp	f1,r3
 1113  00001c44  0401000f	div	f0,f0,f1
 1114  00001c48  00001034	movfp2i	r2,f0
 1115  00001c4c  8fc3fff4	lw	r3,-12(r30)
 1116  00001c50  00400035	movi2fp	f0,r2
 1117  00001c54  00600835	movi2fp	f1,r3
 1118  00001c58  0401000e	mult	f0,f0,f1
 1119  00001c5c  00001034	movfp2i	r2,f0
 1120  00001c60  00220822	sub	r1,r1,r2
 1121  00001c64  afc10000	sw	(r30),r1
 1122  00001c68          	L70_LF2:
 1123  00001c68  8fc1fff4	lw	r1,-12(r30)
 1124  00001c6c  6c220001	sgti	r2,r1,#1
 1125  00001c70  1440000c	bnez	r2,L71_LF2
 1126  00001c74  54000000	nop; delay slot nop
 1127  00001c78  0800000c	j	L61_LF2
 1128  00001c7c  54000000	nop; delay slot nop
 1129  00001c80          	L71_LF2:
 1130  00001c80  0bffff64	j	L68_LF2
 1131  00001c84  54000000	nop; delay slot nop
 1132  00001c88          	L69_LF2:
 1133  00001c88          	L63_LF2:
 1134  00001c88          	L61_LF2:
 1135  00001c88  8fc10004	lw	r1,4(r30)
 1136  00001c8c  20020000	addi	r2,r0,(#0x0)&0xff
 1137  00001c90  a0220000	sb	(r1),r2
 1138  00001c94          	L59_LF2:
 1139  00001c94  8fa20000	lw	r2,0(r29)
 1140  00001c98  8fa30004	lw	r3,4(r29)
 1141  00001c9c  8fdffff8	lw	r31,-8(r30)
 1142  00001ca0  001ee820	add	r29,r0,r30
 1143  00001ca4  8fdefffc	lw	r30,-4(r30)
 1144  00001ca8  4be00000	jr	r31
 1145  00001cac  54000000	nop
 1146  00001cb0          	.endproc _ditoa
 1147  00001cb0          	.align 2
 1148  00001cb0          	.proc _dstrtol
 1149  00001cb0          	.global _dstrtol
 1150  00001cb0          	_dstrtol:
 1151                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1152  00001cb0  afbefffc	sw	-4(r29),r30; push fp
 1153  00001cb4  001df020	add	r30,r0,r29; fp = sp
 1154  00001cb8  afbffff8	sw	-8(r29),r31; push ret addr
 1155  00001cbc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1156  00001cc0  afa20000	sw	0(r29),r2
 1157  00001cc4  20010000	addi	r1,r0,#0
 1158  00001cc8  afc1fff4	sw	-12(r30),r1
 1159  00001ccc          	L73_LF2:
 1160  00001ccc  8fc10000	lw	r1,(r30)
 1161  00001cd0  90220000	lbu	r2,(r1)
 1162  00001cd4  60410020	seqi	r1,r2,#32
 1163  00001cd8  14200034	bnez	r1,L75_LF2
 1164  00001cdc  54000000	nop; delay slot nop
 1165  00001ce0  8fc10000	lw	r1,(r30)
 1166  00001ce4  90220000	lbu	r2,(r1)
 1167  00001ce8  60410009	seqi	r1,r2,#9
 1168  00001cec  14200020	bnez	r1,L75_LF2
 1169  00001cf0  54000000	nop; delay slot nop
 1170  00001cf4  8fc10000	lw	r1,(r30)
 1171  00001cf8  90220000	lbu	r2,(r1)
 1172  00001cfc  6041000a	seqi	r1,r2,#10
 1173  00001d00  1420000c	bnez	r1,L75_LF2
 1174  00001d04  54000000	nop; delay slot nop
 1175  00001d08  0800001c	j	L74_LF2
 1176  00001d0c  54000000	nop; delay slot nop
 1177  00001d10          	L75_LF2:
 1178  00001d10  8fc20000	lw	r2,(r30)
 1179  00001d14  20410001	addi	r1,r2,#1
 1180  00001d18  00011020	add	r2,r0,r1
 1181  00001d1c  afc20000	sw	(r30),r2
 1182  00001d20  0bffffa8	j	L73_LF2
 1183  00001d24  54000000	nop; delay slot nop
 1184  00001d28          	L74_LF2:
 1185  00001d28  8fc10004	lw	r1,4(r30)
 1186  00001d2c  64220000	snei	r2,r1,#0
 1187  00001d30  10400010	beqz	r2,L76_LF2
 1188  00001d34  54000000	nop; delay slot nop
 1189  00001d38  8fc10004	lw	r1,4(r30)
 1190  00001d3c  8fc20000	lw	r2,(r30)
 1191  00001d40  ac220000	sw	(r1),r2
 1192  00001d44          	L76_LF2:
 1193  00001d44  8fc10000	lw	r1,(r30)
 1194  00001d48  90220000	lbu	r2,(r1)
 1195  00001d4c  64410000	snei	r1,r2,#0
 1196  00001d50  14200010	bnez	r1,L77_LF2
 1197  00001d54  54000000	nop; delay slot nop
 1198  00001d58  8fc1fff4	lw	r1,-12(r30)
 1199  00001d5c  08000294	j	L72_LF2
 1200  00001d60  54000000	nop; delay slot nop
 1201  00001d64          	L77_LF2:
 1202  00001d64  8fc10000	lw	r1,(r30)
 1203  00001d68  90220000	lbu	r2,(r1)
 1204  00001d6c  6041002d	seqi	r1,r2,#45
 1205  00001d70  10200024	beqz	r1,L78_LF2
 1206  00001d74  54000000	nop; delay slot nop
 1207  00001d78  2001ffff	addi	r1,r0,#-1
 1208  00001d7c  afc1ffec	sw	-20(r30),r1
 1209  00001d80  8fc20000	lw	r2,(r30)
 1210  00001d84  20410001	addi	r1,r2,#1
 1211  00001d88  00011020	add	r2,r0,r1
 1212  00001d8c  afc20000	sw	(r30),r2
 1213  00001d90  0800000c	j	L79_LF2
 1214  00001d94  54000000	nop; delay slot nop
 1215  00001d98          	L78_LF2:
 1216  00001d98  20010001	addi	r1,r0,#1
 1217  00001d9c  afc1ffec	sw	-20(r30),r1
 1218  00001da0          	L79_LF2:
 1219  00001da0  8fc10008	lw	r1,8(r30)
 1220  00001da4  64220000	snei	r2,r1,#0
 1221  00001da8  14400090	bnez	r2,L80_LF2
 1222  00001dac  54000000	nop; delay slot nop
 1223  00001db0  8fc10000	lw	r1,(r30)
 1224  00001db4  90220000	lbu	r2,(r1)
 1225  00001db8  60410030	seqi	r1,r2,#48
 1226  00001dbc  10200074	beqz	r1,L81_LF2
 1227  00001dc0  54000000	nop; delay slot nop
 1228  00001dc4  8fc20000	lw	r2,(r30)
 1229  00001dc8  20410001	addi	r1,r2,#1
 1230  00001dcc  00011020	add	r2,r0,r1
 1231  00001dd0  afc20000	sw	(r30),r2
 1232  00001dd4  8fc10000	lw	r1,(r30)
 1233  00001dd8  90220000	lbu	r2,(r1)
 1234  00001ddc  60410078	seqi	r1,r2,#120
 1235  00001de0  14200020	bnez	r1,L83_LF2
 1236  00001de4  54000000	nop; delay slot nop
 1237  00001de8  8fc10000	lw	r1,(r30)
 1238  00001dec  90220000	lbu	r2,(r1)
 1239  00001df0  60410058	seqi	r1,r2,#88
 1240  00001df4  1420000c	bnez	r1,L83_LF2
 1241  00001df8  54000000	nop; delay slot nop
 1242  00001dfc  08000024	j	L82_LF2
 1243  00001e00  54000000	nop; delay slot nop
 1244  00001e04          	L83_LF2:
 1245  00001e04  20010010	addi	r1,r0,#16
 1246  00001e08  afc10008	sw	8(r30),r1
 1247  00001e0c  8fc20000	lw	r2,(r30)
 1248  00001e10  20410001	addi	r1,r2,#1
 1249  00001e14  00011020	add	r2,r0,r1
 1250  00001e18  afc20000	sw	(r30),r2
 1251  00001e1c  0800000c	j	L84_LF2
 1252  00001e20  54000000	nop; delay slot nop
 1253  00001e24          	L82_LF2:
 1254  00001e24  20010008	addi	r1,r0,#8
 1255  00001e28  afc10008	sw	8(r30),r1
 1256  00001e2c          	L84_LF2:
 1257  00001e2c  0800000c	j	L80_LF2
 1258  00001e30  54000000	nop; delay slot nop
 1259  00001e34          	L81_LF2:
 1260  00001e34  2001000a	addi	r1,r0,#10
 1261  00001e38  afc10008	sw	8(r30),r1
 1262  00001e3c          	L85_LF2:
 1263  00001e3c          	L80_LF2:
 1264  00001e3c  8fc10008	lw	r1,8(r30)
 1265  00001e40  70220000	slei	r2,r1,#0
 1266  00001e44  1440001c	bnez	r2,L87_LF2
 1267  00001e48  54000000	nop; delay slot nop
 1268  00001e4c  8fc10008	lw	r1,8(r30)
 1269  00001e50  6c220010	sgti	r2,r1,#16
 1270  00001e54  1440000c	bnez	r2,L87_LF2
 1271  00001e58  54000000	nop; delay slot nop
 1272  00001e5c  08000010	j	L86_LF2
 1273  00001e60  54000000	nop; delay slot nop
 1274  00001e64          	L87_LF2:
 1275  00001e64  8fc1fff4	lw	r1,-12(r30)
 1276  00001e68  08000188	j	L72_LF2
 1277  00001e6c  54000000	nop; delay slot nop
 1278  00001e70          	L86_LF2:
 1279  00001e70  54000000	nop
 1280  00001e74          	L88_LF2:
 1281  00001e74  8fc10000	lw	r1,(r30)
 1282  00001e78  90220000	lbu	r2,(r1)
 1283  00001e7c  6c41002f	sgtui	r1,r2,#47
 1284  00001e80  10200030	beqz	r1,L91_LF2
 1285  00001e84  54000000	nop; delay slot nop
 1286  00001e88  8fc10000	lw	r1,(r30)
 1287  00001e8c  90220000	lbu	r2,(r1)
 1288  00001e90  70410039	sleui	r1,r2,#57
 1289  00001e94  1020001c	beqz	r1,L91_LF2
 1290  00001e98  54000000	nop; delay slot nop
 1291  00001e9c  8fc10000	lw	r1,(r30)
 1292  00001ea0  90220000	lbu	r2,(r1)
 1293  00001ea4  2041ffd0	addi	r1,r2,#-48
 1294  00001ea8  afc1fff0	sw	-16(r30),r1
 1295  00001eac  0800008c	j	L92_LF2
 1296  00001eb0  54000000	nop; delay slot nop
 1297  00001eb4          	L91_LF2:
 1298  00001eb4  8fc10000	lw	r1,(r30)
 1299  00001eb8  90220000	lbu	r2,(r1)
 1300  00001ebc  6c410060	sgtui	r1,r2,#96
 1301  00001ec0  10200030	beqz	r1,L93_LF2
 1302  00001ec4  54000000	nop; delay slot nop
 1303  00001ec8  8fc10000	lw	r1,(r30)
 1304  00001ecc  90220000	lbu	r2,(r1)
 1305  00001ed0  7041007a	sleui	r1,r2,#122
 1306  00001ed4  1020001c	beqz	r1,L93_LF2
 1307  00001ed8  54000000	nop; delay slot nop
 1308  00001edc  8fc10000	lw	r1,(r30)
 1309  00001ee0  90220000	lbu	r2,(r1)
 1310  00001ee4  2041ffa9	addi	r1,r2,#-87
 1311  00001ee8  afc1fff0	sw	-16(r30),r1
 1312  00001eec  0800004c	j	L92_LF2
 1313  00001ef0  54000000	nop; delay slot nop
 1314  00001ef4          	L93_LF2:
 1315  00001ef4  8fc10000	lw	r1,(r30)
 1316  00001ef8  90220000	lbu	r2,(r1)
 1317  00001efc  6c410040	sgtui	r1,r2,#64
 1318  00001f00  10200030	beqz	r1,L95_LF2
 1319  00001f04  54000000	nop; delay slot nop
 1320  00001f08  8fc10000	lw	r1,(r30)
 1321  00001f0c  90220000	lbu	r2,(r1)
 1322  00001f10  7041005a	sleui	r1,r2,#90
 1323  00001f14  1020001c	beqz	r1,L95_LF2
 1324  00001f18  54000000	nop; delay slot nop
 1325  00001f1c  8fc10000	lw	r1,(r30)
 1326  00001f20  90220000	lbu	r2,(r1)
 1327  00001f24  2041ffc9	addi	r1,r2,#-55
 1328  00001f28  afc1fff0	sw	-16(r30),r1
 1329  00001f2c  0800000c	j	L92_LF2
 1330  00001f30  54000000	nop; delay slot nop
 1331  00001f34          	L95_LF2:
 1332  00001f34  200103e8	addi	r1,r0,#1000
 1333  00001f38  afc1fff0	sw	-16(r30),r1
 1334  00001f3c          	L96_LF2:
 1335  00001f3c          	L94_LF2:
 1336  00001f3c          	L92_LF2:
 1337  00001f3c  8fc1fff0	lw	r1,-16(r30)
 1338  00001f40  8fc20008	lw	r2,8(r30)
 1339  00001f44  0022082a	slt	r1,r1,r2
 1340  00001f48  10200040	beqz	r1,L90_LF2
 1341  00001f4c  54000000	nop; delay slot nop
 1342  00001f50  8fc1fff4	lw	r1,-12(r30)
 1343  00001f54  8fc20008	lw	r2,8(r30)
 1344  00001f58  00200035	movi2fp	f0,r1
 1345  00001f5c  00400835	movi2fp	f1,r2
 1346  00001f60  0401000e	mult	f0,f0,f1
 1347  00001f64  00000834	movfp2i	r1,f0
 1348  00001f68  afc1fff4	sw	-12(r30),r1
 1349  00001f6c  8fc1fff4	lw	r1,-12(r30)
 1350  00001f70  8fc2fff0	lw	r2,-16(r30)
 1351  00001f74  00220820	add	r1,r1,r2
 1352  00001f78  afc1fff4	sw	-12(r30),r1
 1353  00001f7c  8fc20000	lw	r2,(r30)
 1354  00001f80  20410001	addi	r1,r2,#1
 1355  00001f84  00011020	add	r2,r0,r1
 1356  00001f88  afc20000	sw	(r30),r2
 1357  00001f8c          	L97_LF2:
 1358  00001f8c          	L90_LF2:
 1359  00001f8c  8fc1fff0	lw	r1,-16(r30)
 1360  00001f90  8fc20008	lw	r2,8(r30)
 1361  00001f94  0022082a	slt	r1,r1,r2
 1362  00001f98  1420000c	bnez	r1,L98_LF2
 1363  00001f9c  54000000	nop; delay slot nop
 1364  00001fa0  0800000c	j	L89_LF2
 1365  00001fa4  54000000	nop; delay slot nop
 1366  00001fa8          	L98_LF2:
 1367  00001fa8  0bfffec8	j	L88_LF2
 1368  00001fac  54000000	nop; delay slot nop
 1369  00001fb0          	L89_LF2:
 1370  00001fb0  8fc10004	lw	r1,4(r30)
 1371  00001fb4  64220000	snei	r2,r1,#0
 1372  00001fb8  10400010	beqz	r2,L99_LF2
 1373  00001fbc  54000000	nop; delay slot nop
 1374  00001fc0  8fc10004	lw	r1,4(r30)
 1375  00001fc4  8fc20000	lw	r2,(r30)
 1376  00001fc8  ac220000	sw	(r1),r2
 1377  00001fcc          	L99_LF2:
 1378  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1379  00001fd0  8fc2ffec	lw	r2,-20(r30)
 1380  00001fd4  00200035	movi2fp	f0,r1
 1381  00001fd8  00400835	movi2fp	f1,r2
 1382  00001fdc  0401000e	mult	f0,f0,f1
 1383  00001fe0  00000834	movfp2i	r1,f0
 1384  00001fe4  afc1fff4	sw	-12(r30),r1
 1385  00001fe8  8fc1fff4	lw	r1,-12(r30)
 1386  00001fec  08000004	j	L72_LF2
 1387  00001ff0  54000000	nop; delay slot nop
 1388  00001ff4          	L72_LF2:
 1389  00001ff4  8fa20000	lw	r2,0(r29)
 1390  00001ff8  8fdffff8	lw	r31,-8(r30)
 1391  00001ffc  001ee820	add	r29,r0,r30
 1392  00002000  8fdefffc	lw	r30,-4(r30)
 1393  00002004  4be00000	jr	r31
 1394  00002008  54000000	nop
 1395  0000200c          	.endproc _dstrtol
 1396  0000200c          	.align 2
 1397  0000200c          	.proc _bcopy
 1398  0000200c          	.global _bcopy
 1399  0000200c          	_bcopy:
 1400                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1401  0000200c  afbefffc	sw	-4(r29),r30; push fp
 1402  00002010  001df020	add	r30,r0,r29; fp = sp
 1403  00002014  afbffff8	sw	-8(r29),r31; push ret addr
 1404  00002018  2fbd0010	subui	r29,r29,#16; alloc local storage
 1405  0000201c  afa20000	sw	0(r29),r2
 1406  00002020  afa30004	sw	4(r29),r3
 1407  00002024  54000000	nop
 1408  00002028          	L101_LF2:
 1409  00002028  8fc10008	lw	r1,8(r30)
 1410  0000202c  2022ffff	addi	r2,r1,#-1
 1411  00002030  afc20008	sw	8(r30),r2
 1412  00002034  6c210000	sgti	r1,r1,#0
 1413  00002038  1420000c	bnez	r1,L103_LF2
 1414  0000203c  54000000	nop; delay slot nop
 1415  00002040  0800002c	j	L102_LF2
 1416  00002044  54000000	nop; delay slot nop
 1417  00002048          	L103_LF2:
 1418  00002048  8fc10004	lw	r1,4(r30)
 1419  0000204c  20220001	addi	r2,r1,#1
 1420  00002050  afc20004	sw	4(r30),r2
 1421  00002054  8fc20000	lw	r2,(r30)
 1422  00002058  20430001	addi	r3,r2,#1
 1423  0000205c  afc30000	sw	(r30),r3
 1424  00002060  80420000	lb	r2,(r2)
 1425  00002064  a0220000	sb	(r1),r2
 1426  00002068  0bffffbc	j	L101_LF2
 1427  0000206c  54000000	nop; delay slot nop
 1428  00002070          	L102_LF2:
 1429  00002070          	L100_LF2:
 1430  00002070  8fa20000	lw	r2,0(r29)
 1431  00002074  8fa30004	lw	r3,4(r29)
 1432  00002078  8fdffff8	lw	r31,-8(r30)
 1433  0000207c  001ee820	add	r29,r0,r30
 1434  00002080  8fdefffc	lw	r30,-4(r30)
 1435  00002084  4be00000	jr	r31
 1436  00002088  54000000	nop
 1437  0000208c          	.endproc _bcopy
 1438  0000208c          	.align 2
 1439  0000208c          	.proc _bzero
 1440  0000208c          	.global _bzero
 1441  0000208c          	_bzero:
 1442                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1443  0000208c  afbefffc	sw	-4(r29),r30; push fp
 1444  00002090  001df020	add	r30,r0,r29; fp = sp
 1445  00002094  afbffff8	sw	-8(r29),r31; push ret addr
 1446  00002098  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  0000209c  afa20000	sw	0(r29),r2
 1448  000020a0  54000000	nop
 1449  000020a4          	L105_LF2:
 1450  000020a4  8fc10004	lw	r1,4(r30)
 1451  000020a8  2022ffff	addi	r2,r1,#-1
 1452  000020ac  afc20004	sw	4(r30),r2
 1453  000020b0  6c210000	sgti	r1,r1,#0
 1454  000020b4  1420000c	bnez	r1,L107_LF2
 1455  000020b8  54000000	nop; delay slot nop
 1456  000020bc  08000020	j	L106_LF2
 1457  000020c0  54000000	nop; delay slot nop
 1458  000020c4          	L107_LF2:
 1459  000020c4  8fc10000	lw	r1,(r30)
 1460  000020c8  20220001	addi	r2,r1,#1
 1461  000020cc  afc20000	sw	(r30),r2
 1462  000020d0  20020000	addi	r2,r0,(#0x0)&0xff
 1463  000020d4  a0220000	sb	(r1),r2
 1464  000020d8  0bffffc8	j	L105_LF2
 1465  000020dc  54000000	nop; delay slot nop
 1466  000020e0          	L106_LF2:
 1467  000020e0          	L104_LF2:
 1468  000020e0  8fa20000	lw	r2,0(r29)
 1469  000020e4  8fdffff8	lw	r31,-8(r30)
 1470  000020e8  001ee820	add	r29,r0,r30
 1471  000020ec  8fdefffc	lw	r30,-4(r30)
 1472  000020f0  4be00000	jr	r31
 1473  000020f4  54000000	nop
 1474  000020f8          	.endproc _bzero
 1475  000020f8          	.align 2
 1476  000020f8          	.proc _min
 1477  000020f8          	.global _min
 1478  000020f8          	_min:
 1479                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1480  000020f8  afbefffc	sw	-4(r29),r30; push fp
 1481  000020fc  001df020	add	r30,r0,r29; fp = sp
 1482  00002100  afbffff8	sw	-8(r29),r31; push ret addr
 1483  00002104  2fbd0010	subui	r29,r29,#16; alloc local storage
 1484  00002108  afa20000	sw	0(r29),r2
 1485  0000210c  afa30004	sw	4(r29),r3
 1486  00002110  8fc10000	lw	r1,(r30)
 1487  00002114  8fc20004	lw	r2,4(r30)
 1488  00002118  0022182c	sle	r3,r1,r2
 1489  0000211c  14600008	bnez	r3,L109_LF2
 1490  00002120  54000000	nop; delay slot nop
 1491  00002124  8fc10004	lw	r1,4(r30)
 1492  00002128          	L109_LF2:
 1493  00002128  08000004	j	L108_LF2
 1494  0000212c  54000000	nop; delay slot nop
 1495  00002130          	L108_LF2:
 1496  00002130  8fa20000	lw	r2,0(r29)
 1497  00002134  8fa30004	lw	r3,4(r29)
 1498  00002138  8fdffff8	lw	r31,-8(r30)
 1499  0000213c  001ee820	add	r29,r0,r30
 1500  00002140  8fdefffc	lw	r30,-4(r30)
 1501  00002144  4be00000	jr	r31
 1502  00002148  54000000	nop
 1503  0000214c          	.endproc _min
 1504                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1505                      ;;;
 1506                      ;;; Most of the traps are called in files from libtraps.
 1509  0000214c          	.align 2
 1510  0000214c          	.proc _exit
 1511  0000214c          	.global _exit
 1512  0000214c          	_exit:
 1513  0000214c  44000300	trap	#0x300
 1514  00002150  4be00000	jr	r31
 1515  00002154  54000000	nop
 1516  00002158          	.endproc _exit
 1518                      ; for the benefit of gcc.
 1519  00002158          	.proc ___main
 1520  00002158          	.global ___main
 1521  00002158          	___main:
 1522  00002158  4be00000	jr	r31
 1523  0000215c  54000000	nop
 1524  00002160          	.endproc ___main
 1525  00002160          	.text
 1526  00002160          	.global _etext
 1527  00002160          	_etext:
 1528  00002160          	.align 3
 1529  00002160          	.data
 1530  00003179          	.global _edata
 1531  00003179          	_edata:
